<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Attributes\Scope;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Support\Str;

class MessageTemplate extends Model
{
    protected $fillable = [
        'slug',
        'message_template_category_id',
        'title',
        'message',
        'is_active',
    ];

    protected function casts(): array
    {
        return [
            'slug' => 'string',
            'is_active' => 'boolean',
        ];
    }

    protected static function boot(): void
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::creating(function (MessageTemplate $messageTemplate) {
            $messageTemplate->slug = Str::uuid()->toString();
        });

        static::created(function (MessageTemplate $messageTemplate) {
            if ($messageTemplate->is_active) {
                self::where('message_template_category_id', $messageTemplate->message_template_category_id)
                    ->where('id', '!=', $messageTemplate->id)
                    ->update(['is_active' => false]);
            }
        });

        static::updated(function (MessageTemplate $messageTemplate) {
            if ($messageTemplate->is_active) {
                self::where('message_template_category_id', $messageTemplate->message_template_category_id)
                    ->where('id', '!=', $messageTemplate->id)
                    ->update(['is_active' => false]);
            }
        });
    }

    public function messageTemplateCategory(): BelongsTo
    {
        return $this->belongsTo(MessageTemplateCategory::class);
    }

    // TODO Scope
    #[Scope]
    protected function active(Builder $query): Builder
    {
        return $query->where('is_active', true);
    }
}
