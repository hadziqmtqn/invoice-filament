<?php

namespace App\Filament\Resources\InvoiceResource\Pages;

use App\Enums\DataStatus;
use App\Enums\PaymentSource;
use App\Filament\Resources\InvoiceResource;
use App\Filament\Resources\RecurringInvoiceResource\Pages\ViewRecurringInvoice;
use App\Filament\Resources\UserResource;
use App\Models\Invoice;
use Filament\Actions\Action;
use Filament\Infolists\Components\Actions;
use Filament\Infolists\Components\Group;
use Filament\Infolists\Components\RepeatableEntry;
use Filament\Infolists\Components\Section;
use Filament\Infolists\Components\TextEntry;
use Filament\Infolists\Infolist;
use Filament\Resources\Pages\ViewRecord;
use Filament\Support\Colors\Color;
use Filament\Support\Enums\FontWeight;
use Filament\Support\Enums\IconPosition;
use Illuminate\Support\HtmlString;

class ViewInvoice extends ViewRecord
{
    protected static string $resource = InvoiceResource::class;

    protected function getHeaderActions(): array
    {
        // TODO Header Action Method
        return InvoiceResource\Actions\ViewHeaderAction::headerActions();
    }

    public function infolist(Infolist $infolist): Infolist
    {
        parent::infolist($infolist); // TODO: Change the autogenerated stub

        return $infolist
            ->schema([
                Group::make()
                    ->schema([
                        Section::make()
                            ->schema([
                                TextEntry::make('recurringInvoice.code')
                                    ->label('Faktur Berulang')
                                    ->color('primary')
                                    ->inlineLabel()
                                    ->url(fn(Invoice $record): string => $record->recurringInvoice ? ViewRecurringInvoice::getUrl(['record' => $record->recurringInvoice?->slug]) : '#'),

                                TextEntry::make('code')
                                    ->label('Kode Faktur')
                                    ->color('primary')
                                    ->inlineLabel(),

                                TextEntry::make('title')
                                    ->label('Judul')
                                    ->inlineLabel(),

                                TextEntry::make('user.name')
                                    ->label('Pengguna')
                                    ->url(fn(Invoice $record): string => UserResource::getUrl('edit', ['record' => $record->user?->username]))
                                    ->color('primary')
                                    ->icon('heroicon-o-arrow-top-right-on-square')
                                    ->iconPosition(IconPosition::After)
                                    ->inlineLabel(),

                                TextEntry::make('date')
                                    ->label('Tanggal')
                                    ->date('d M Y')
                                    ->inlineLabel(),

                                TextEntry::make('due_date')
                                    ->label('Tanggal Jatuh Tempo')
                                    ->date('d M Y')
                                    ->inlineLabel(),
                            ]),

                        Section::make('Item Faktur')
                            ->schema([
                                RepeatableEntry::make('invoiceItems')
                                    ->hiddenLabel()
                                    ->columns()
                                    ->schema([
                                        TextEntry::make('item.name')
                                            ->label('Nama Item')
                                            ->weight('bold')
                                            ->inlineLabel(),

                                        TextEntry::make('qty')
                                            ->label('Kuantitas')
                                            ->weight('bold')
                                            ->inlineLabel(),

                                        TextEntry::make('unit')
                                            ->label('Unit')
                                            ->weight('bold')
                                            ->inlineLabel(),

                                        TextEntry::make('rate')
                                            ->label('Harga Satuan')
                                            ->weight('bold')
                                            ->money('idr')
                                            ->prefix('Rp')
                                            ->numeric(0, ',', '.')
                                            ->inlineLabel()
                                            ->color('primary'),

                                        TextEntry::make('note')
                                            ->label('Catatan')
                                            ->weight('bold')
                                            ->inlineLabel(),
                                    ]),
                            ]),
                    ])
                    ->columnSpan(['lg' => 2]),

                Group::make()
                    ->schema([
                        Section::make()
                            ->schema([
                                TextEntry::make('status')
                                    ->color(fn(string $state): string => DataStatus::tryFrom($state)?->getColor() ?? 'gray')
                                    ->formatStateUsing(fn(string $state): HtmlString => new HtmlString('<span class="text-xl font-semibold">' . str_replace('_', ' ', strtoupper($state)) . '</span>')),

                                TextEntry::make('total_price_before_discount')
                                    ->label('Total Tagihan (Sebelum Diskon)')
                                    ->money('idr')
                                    ->size(TextEntry\TextEntrySize::Large)
                                    ->weight(FontWeight::Bold)
                                    ->visible(fn(Invoice $record): bool => $record->discount > 0),

                                TextEntry::make('total_price')
                                    ->label(fn(Invoice $record): string => $record->discount > 0 ? 'Total Tagihan (Setelah Diskon)' : 'Total Tagihan')
                                    ->money('idr')
                                    ->prefix('Rp')
                                    ->numeric(0, ',', '.')
                                    ->size(TextEntry\TextEntrySize::Large)
                                    ->weight(FontWeight::Bold)
                                    ->color('primary'),

                                TextEntry::make('total_paid')
                                    ->label('Total Bayar')
                                    ->money('idr')
                                    ->prefix('Rp')
                                    ->numeric(0, ',', '.')
                                    ->size(TextEntry\TextEntrySize::Large)
                                    ->weight(FontWeight::Bold)
                                    ->color('info'),

                                TextEntry::make('total_due')
                                    ->label('Total Jatuh Tempo')
                                    ->money('idr')
                                    ->prefix('Rp')
                                    ->numeric(0, ',', '.')
                                    ->size(TextEntry\TextEntrySize::Large)
                                    ->weight(FontWeight::Bold)
                                    ->color('danger'),
                            ]),

                        Actions::make([
                            Actions\Action::make('mark_as_sent')
                                ->label('Tandai Terkirim')
                                ->color(Color::Indigo)
                                ->visible(fn(Invoice $record): bool => $record->status === DataStatus::DRAFT->value)
                                ->requiresConfirmation()
                                ->action(function (Invoice $record) {
                                    $record->status = DataStatus::SENT->value;
                                    $record->save();
                                })
                        ])
                    ])
                    ->columnSpan(['lg' => 1]),

                Section::make('Riwayat Pembayaran')
                    ->schema([
                        RepeatableEntry::make('invoicePayments')
                            ->hiddenLabel()
                            ->schema([
                                TextEntry::make('payment.reference_number')
                                    ->label('No. Referensi')
                                    ->weight('bold')
                                    ->inlineLabel(),

                                TextEntry::make('payment.date')
                                    ->label('Tanggal')
                                    ->date('d M Y')
                                    ->weight('bold')
                                    ->inlineLabel(),

                                TextEntry::make('payment.amount')
                                    ->label('Jumlah')
                                    ->weight('bold')
                                    ->money('idr')
                                    ->prefix('Rp')
                                    ->numeric(0, ',', '.')
                                    ->inlineLabel(),

                                TextEntry::make('payment.payment_source')
                                    ->label('Sumber Pembayaran')
                                    ->weight('bold')
                                    ->formatStateUsing(fn($state): string => PaymentSource::tryFrom($state)?->getLabel() ?? 'N/A')
                                    ->inlineLabel(),

                                TextEntry::make('payment.payment_method')
                                    ->label('Metode Pembayaran')
                                    ->weight('bold')
                                    ->formatStateUsing(fn(string $state): string => strtoupper(str_replace('_', ' ', $state)))
                                    ->inlineLabel(),

                                TextEntry::make('payment.status')
                                    ->label('Status')
                                    ->weight('bold')
                                    ->formatStateUsing(fn($state): string => DataStatus::tryFrom($state)?->getLabel() ?? 'N/A')
                                    ->color(fn(string $state): string => DataStatus::tryFrom($state)?->getColor() ?? 'gray')
                                    ->inlineLabel(),
                            ])
                            ->columns()
                    ])
            ])
            ->columns(3);
    }
}
